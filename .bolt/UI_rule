让我为您总结这个项目在前端实现方面的风格准则：

### 1. 设计风格

1. **现代简约风格**
- 使用 Tailwind CSS 构建清晰的布局
- 采用圆角边框和适当的阴影效果提升视觉层次
- 保持界面整洁，避免过度装饰

2. **响应式设计**

- 使用 container 和 grid 布局确保响应式
- 合理的间距和边距设置

### 2. 主题设置

1. **深色模式支持**

- 完整的深色模式配置
- 通过 class 动态切换明暗主题

2. **颜色系统**
- 主色调：使用 indigo-600 作为主要强调色
- 文本颜色：根据深浅主题自动适应
- 状态颜色：成功、错误等状态使用语义化的颜色

### 3. 组件设计规范

1. **一致的组件结构**

- 清晰的组件层级
- 统一的间距和对齐方式
- 一致的交互反馈样式

2. **图标使用**
- 统一使用 lucide-react 图标库
- 保持图标大小一致（通常为 h-5 w-5）
- 图标颜色与主题适配

### 4. 交互设计

1. **按钮样式**
- 主要按钮：使用填充背景色
- 次要按钮：使用透明背景
- 禁用状态：降低透明度和鼠标样式

2. **表单控件**

- 统一的输入框样式
- 清晰的标签和描述文本
- 合适的输入框大小和间距

### 5. 布局规范

1. **页面结构**
- 顶部导航栏固定
- 主要内容区域自适应
- 合理的留白和分隔

2. **间距系统**
- 使用 Tailwind 的间距类
- 保持一致的组件间距
- 响应式的间距调整

### 6. 反馈机制

1. **提示信息**

- 使用 toast 提供操作反馈
- 错误信息清晰可见
- 成功提示简洁明了

### 7. 国际化支持

1. **文本管理**

- 完整的中英文支持
- 文本键值对管理
- 动态语言切换

这些设计准则确保了整个应用保持一致的视觉风格和用户体验，同时保持了代码的可维护性和可扩展性。